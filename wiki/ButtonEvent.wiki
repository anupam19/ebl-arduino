Event handler for buttons (tactile switches).

= Methods =

*ButtonEvent.addButton*(pin, onDown, onUp, onHold, holdMillisWaitonDouble, doubleMillisWait)

 Add a new button to event handler.

 * *pin*: Pin where the button is connected.
 * *onDown*: Method called on onDown events.
 * *onUp*: Method called on onUp events.
 * *onHold*: Method called on onHold events.
 * *holdMillisWait*: Hold time in milisseconds.
 * *onDouble*: Method called on onDoubleevents.
 * *doubleMillisWait*:  Double time in milisseconds.

*ButtonEvent.loop*()

 Event handler process loop. Must be added to main 'ButtonEvent.loop()' function.

= Events =

 * *onDown*: Happens once when the button is pressed.
 * *onUp*: Happens once when the button is released.
 * *onHold*: Happens once when the button is keep pressed during the time expressed through *holdMillisWait* parameter.
 * *onDouble*: Happens once when the button is pressed at second time during the time expressed through *doubleMillisWait* parameter.

= Comments =

 Passing a *NULL* parameter to event method in *addButton* or setting it's wait time to *0* will disable the event.

 The *onDouble* event override the second *onDown* when it happen within the period specified in *doubleMillisWait*. The *onUp* event ocurrs normaly when the button is released from double event.

= Example =

{{{
#include <ButtonEvent.h>

void setup() {
  ButtonEvent.addButton(12,       //button pin
                        onDown,   //onDown event function
                        onUp,     //onUp event function
                        onHold,   //onHold event function
                        1000,     //hold time in milliseconds
                        onDouble, //double event function
                        200);     //double time interval

  Serial.begin(9600);
}

void loop() {
  ButtonEvent.loop();
}

void onDown(ButtonInformation* Sender) {
  Serial.print("Button (pin:");
  Serial.print(Sender->pin);
  Serial.println(") down!");
}

void onUp(ButtonInformation* Sender) {
  Serial.print("Button (pin:");
  Serial.print(Sender->pin);
  Serial.println(") up!");
}

void onHold(ButtonInformation* Sender) {
  Serial.print("Button (pin:");
  Serial.print(Sender->pin);
  Serial.print(") hold for ");
  Serial.print(Sender->holdMillis);
  Serial.println("ms!");
}

void onDouble(ButtonInformation* Sender) {
  Serial.print("Button (pin:");
  Serial.print(Sender->pin);
  Serial.print(") double click in ");
  Serial.print(Sender->doubleMillis);
  Serial.println("ms!");
}
}}}